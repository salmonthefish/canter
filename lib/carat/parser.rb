#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'
module Carat
  class Parser < Racc::Parser


  require_relative 'handler'

  attr_reader :handler

  def initialize(tokenizer, handler = Handler.new)
    @tokenizer = tokenizer
    @handler = handler
    super()
  end

  def next_token
    @tokenizer.next_token
  end

  def parse
    do_parse
    handler
  end
##### State transition tables begin ###

racc_action_table = [
    28,    29,    30,    31,    12,    17,    10,    39,    23,    33,
    16,    41,    18,    12,    20,    10,    10,    23,    28,    29,
    30,    31,    28,    29,    30,    31,    13,    34,    35,    12,
    11,    10 ]

racc_action_check = [
    16,    16,    16,    16,    15,     9,    12,    36,    15,    16,
     9,    36,     9,    14,    11,     8,     7,    14,    32,    32,
    32,    32,    39,    39,    39,    39,     3,    19,    21,     2,
     1,     0 ]

racc_action_pointer = [
    29,    30,    22,    19,   nil,   nil,   nil,    14,    13,     2,
   nil,    14,     4,   nil,     6,    -3,    -3,   nil,   nil,    17,
   nil,    21,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    15,   nil,   nil,   nil,    -2,   nil,   nil,    19,
   nil,   nil,   nil ]

racc_action_default = [
   -29,   -29,    -1,   -29,    -4,    -5,    -6,   -29,   -29,   -29,
   -10,   -29,   -29,    -3,   -29,   -29,   -14,   -13,   -24,   -29,
    43,   -29,    -7,   -26,    -8,    -9,   -15,   -16,   -19,   -20,
   -21,   -22,   -17,   -27,   -25,    -2,   -29,   -12,   -18,   -17,
   -23,   -28,   -11 ]

racc_goto_table = [
     2,     1,    37,    22,    24,    25,    36,    14,    15,    42,
    21,    19,    26,    27,    32,    40 ]

racc_goto_check = [
     2,     1,    13,     8,     8,    11,    12,     2,     2,    13,
     3,    14,    15,    16,    17,    18 ]

racc_goto_pointer = [
   nil,     1,     0,    -2,   nil,   nil,   nil,   nil,   -11,   nil,
   nil,   -11,   -26,   -30,     2,    -4,    -3,    -2,   -21 ]

racc_goto_default = [
   nil,   nil,   nil,     3,     4,     5,     6,     7,   nil,     8,
     9,   nil,   nil,   nil,   nil,    38,   nil,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 15, :_reduce_none,
  4, 16, :_reduce_none,
  2, 16, :_reduce_none,
  1, 17, :_reduce_none,
  1, 17, :_reduce_none,
  1, 17, :_reduce_none,
  3, 18, :_reduce_none,
  3, 19, :_reduce_none,
  3, 20, :_reduce_9,
  1, 24, :_reduce_none,
  3, 26, :_reduce_none,
  1, 26, :_reduce_none,
  1, 28, :_reduce_13,
  0, 25, :_reduce_none,
  1, 25, :_reduce_none,
  1, 25, :_reduce_none,
  0, 27, :_reduce_none,
  1, 27, :_reduce_none,
  1, 29, :_reduce_none,
  1, 29, :_reduce_20,
  1, 29, :_reduce_21,
  1, 29, :_reduce_22,
  3, 30, :_reduce_none,
  2, 21, :_reduce_24,
  3, 23, :_reduce_25,
  1, 22, :_reduce_26,
  1, 31, :_reduce_27,
  1, 32, :_reduce_28 ]

racc_reduce_n = 29

racc_shift_n = 43

racc_token_table = {
  false => 0,
  :error => 1,
  :KEY => 2,
  :STRING => 3,
  :NUMBER => 4,
  :TRUE => 5,
  :FALSE => 6,
  :NEWLINE => 7,
  "=" => 8,
  "," => 9,
  "{" => 10,
  "}" => 11,
  "[" => 12,
  "]" => 13 }

racc_nt_base = 14

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "KEY",
  "STRING",
  "NUMBER",
  "TRUE",
  "FALSE",
  "NEWLINE",
  "\"=\"",
  "\",\"",
  "\"{\"",
  "\"}\"",
  "\"[\"",
  "\"]\"",
  "$start",
  "document",
  "entities",
  "entity",
  "object",
  "named_object",
  "pair",
  "start_object",
  "end_object",
  "start_named_object",
  "key",
  "value",
  "values_minus_array",
  "value_minus_array",
  "string",
  "literal",
  "array",
  "start_array",
  "end_array" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

# reduce 2 omitted

# reduce 3 omitted

# reduce 4 omitted

# reduce 5 omitted

# reduce 6 omitted

# reduce 7 omitted

# reduce 8 omitted

def _reduce_9(val, _values, result)
 @handler.pair(val[0], val[2]) 
    result
end

# reduce 10 omitted

# reduce 11 omitted

# reduce 12 omitted

def _reduce_13(val, _values, result)
 @handler.name(val[0]) 
    result
end

# reduce 14 omitted

# reduce 15 omitted

# reduce 16 omitted

# reduce 17 omitted

# reduce 18 omitted

# reduce 19 omitted

def _reduce_20(val, _values, result)
 n = val[0]; result = n.count('.') > 0 ? n.to_f : n.to_i 
    result
end

def _reduce_21(val, _values, result)
 result = true 
    result
end

def _reduce_22(val, _values, result)
 result = false 
    result
end

# reduce 23 omitted

def _reduce_24(val, _values, result)
 @handler.start_object 
    result
end

def _reduce_25(val, _values, result)
 @handler.start_object 
    result
end

def _reduce_26(val, _values, result)
 @handler.end_object 
    result
end

def _reduce_27(val, _values, result)
 @handler.start_array 
    result
end

def _reduce_28(val, _values, result)
 @handler.end_array 
    result
end

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module Carat
